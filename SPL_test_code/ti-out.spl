equal (x, y, _eqa6) :: a6 a6 (a6 a6 -> Bool) -> Bool {
    return _eqa6(x, y) /*:: a6 a6 -> Bool*/;
}

correct (l, k, _eqa14) :: a14 a14 (a14 a14 -> Bool) -> Bool {
    return equal(l, k, _eqa14) /*:: a14 a14 (a14 a14 -> Bool) -> Bool*/;
}

main () :: -> Void {
    print(equal(1, 2, _eqInt/* f */) /*:: Int Int (Int Int -> Bool) -> Bool*/) /*:: Bool -> Void*/;
    correct(True, False, _eqBool/* f */) /*:: Bool Bool (Bool Bool -> Bool) -> Bool*/;
}

