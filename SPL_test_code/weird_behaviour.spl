append ( l1, l2 )  {
	if ( isEmpty ( l1 ) ) {
		return l2;
    } else {
		l1.tl = append ( l1.tl, l2 );
		return l1;
	}
}


reverse (list) {
    var accu = [];

    accu = (list.hd : accu);
    list = list.tl;

    return accu;
}
/*
append ( l1, l2 ) :: [t] [t] -> [t] {
	if ( isEmpty ( l1 ) ) {
		return l2;
    } else {
		l1.tl = append ( l1.tl, l2 );
		return l1;
	}
}

reverse (list) :: [x] -> [x] {
    [v] accu = [];

    while (!isEmpty(list)) {
        accu = (list.hd : accu);
        list = list.tl;
    }
    return accu;
}
*/